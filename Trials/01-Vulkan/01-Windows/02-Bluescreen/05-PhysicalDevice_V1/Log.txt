WinMain()-> Program started successfully
FillInstanceExtensionNames(): first call succeeded
FillInstanceExtensionNames(): second call succeeded
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_device_group_creation
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_external_fence_capabilities
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_external_memory_capabilities
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_external_semaphore_capabilities
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_get_physical_device_properties2
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_get_surface_capabilities2
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_surface
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_surface_protected_capabilities
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_win32_surface
FillInstanceExtensionNames(): Vulkan Extension Name = VK_EXT_debug_report
FillInstanceExtensionNames(): Vulkan Extension Name = VK_EXT_debug_utils
FillInstanceExtensionNames(): Vulkan Extension Name = VK_EXT_surface_maintenance1
FillInstanceExtensionNames(): Vulkan Extension Name = VK_EXT_swapchain_colorspace
FillInstanceExtensionNames(): Vulkan Extension Name = VK_NV_display_stereo
FillInstanceExtensionNames(): Vulkan Extension Name = VK_NV_external_memory_capabilities
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_portability_enumeration
FillInstanceExtensionNames(): Vulkan Extension Name = VK_LUNARG_direct_driver_loading
FillInstanceExtensionNames(): VK_KHR_SURFACE_EXTENSION_NAME is found
FillInstanceExtensionNames(): VK_KHR_WIN32_SURFACE_EXTENSION_NAME is found
FillInstanceExtensionNames(): Enabled Vulkan Instance Extension Name = VK_KHR_surface
FillInstanceExtensionNames(): Enabled Vulkan Instance Extension Name = VK_KHR_win32_surface
CreateVulkanInstance(): FillInstanceExtensionNames() succeeded
CreateVulkanInstance(): vkCreateInstance() succeeded
initialize(): CreateVulkanInstance() succeeded
GetSupportedSurface(): vkCreateWin32SurfaceKHR() succeeded
initialize(): GetSupportedSurface() succeeded
GetPhysicalDevice(): vkEnumeratePhysicalDevices() first call succedded
GetPhysicalDevice(): vkEnumeratePhysicalDevices() second call succedded

Physical Device 0: Intel(R) UHD Graphics 630
==> SELECTED this Physical Device (Index 0): Intel(R) UHD Graphics 630
GetPhysicalDevice(): Successfully chose a physical device with graphics + present support

***** SELECTED DEVICE FULL DETAILS *****
Device Name  : Intel(R) UHD Graphics 630
API Version  : 1.3.215
Driver Ver.  : 1656895 (Vendor Specific)
VendorID     : 0x8086
DeviceID     : 0x3E98
Device Type  : 1
pipelineCacheUUID: 0F3A0C3C073F3932063F053102350001

>> Device Limits <<
maxImageDimension2D            : 16384
maxUniformBufferRange          : 134217724
maxStorageBufferRange          : 1073741820
maxPushConstantsSize           : 256
maxMemoryAllocationCount       : 2109181
maxSamplerAllocationCount      : 4000
bufferImageGranularity         : 1
maxBoundDescriptorSets         : 32
maxPerStageDescriptorSamplers  : 64
maxPerStageDescriptorUniformBuffers : 200

>> Device Features <<
geometryShader               : YES
tessellationShader           : YES
samplerAnisotropy            : YES
multiDrawIndirect            : YES
fillModeNonSolid             : YES
wideLines                    : YES
largePoints                  : YES
alphaToOne                   : YES

>> Memory Properties <<
Memory Heap Count: 1
  Heap[0]: Size=8504987648 bytes, Flags=0x1
Memory Type Count: 3
  Type[0]: HeapIndex=0, PropertyFlags=0x1
  Type[1]: HeapIndex=0, PropertyFlags=0x7
  Type[2]: HeapIndex=0, PropertyFlags=0xF
***** END of SELECTED DEVICE DETAILS *****

initialize(): GetPhysicalDevice() succeeded
WinMain(): initialize() succeeded
uninitialize(): vkDestroySurfaceKHR() succeeded
uninitialize(): vkDestroyInstance() succeeded
uninitialize()-> Program ended successfully.

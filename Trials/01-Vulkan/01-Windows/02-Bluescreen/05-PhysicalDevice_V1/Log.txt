WinMain()-> Program started successfully
FillInstanceExtensionNames(): First call to vkEnumerateInstanceExtensionProperties() succedded
FillInstanceExtensionNames(): Second call to vkEnumerateInstanceExtensionProperties() succedded
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_device_group_creation
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_external_fence_capabilities
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_external_memory_capabilities
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_external_semaphore_capabilities
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_get_physical_device_properties2
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_get_surface_capabilities2
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_surface
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_surface_protected_capabilities
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_win32_surface
FillInstanceExtensionNames(): Vulkan Extension Name = VK_EXT_debug_report
FillInstanceExtensionNames(): Vulkan Extension Name = VK_EXT_debug_utils
FillInstanceExtensionNames(): Vulkan Extension Name = VK_EXT_surface_maintenance1
FillInstanceExtensionNames(): Vulkan Extension Name = VK_EXT_swapchain_colorspace
FillInstanceExtensionNames(): Vulkan Extension Name = VK_NV_display_stereo
FillInstanceExtensionNames(): Vulkan Extension Name = VK_NV_external_memory_capabilities
FillInstanceExtensionNames(): Vulkan Extension Name = VK_KHR_portability_enumeration
FillInstanceExtensionNames(): Vulkan Extension Name = VK_LUNARG_direct_driver_loading
FillInstanceExtensionNames(): VK_KHR_SURFACE_EXTENSION_NAME is found
FillInstanceExtensionNames(): VK_KHR_WIN32_SURFACE_EXTENSION_NAME is found
FillInstanceExtensionNames(): Enabled Vulkan Instance Extension Name = VK_KHR_surface
FillInstanceExtensionNames(): Enabled Vulkan Instance Extension Name = VK_KHR_win32_surface
CreateVulkanInstance(): FillInstanceExtensionNames() succedded
CreateVulkanInstance(): vkCreateInstance() succedded
initialize(): CreateVulkanInstance() succedded
GetSupportedSurface(): vkCreateWin32SurfaceKHR() succedded
initialize(): GetSupportedSurface() succedded
GetPhysicalDevice(): vkEnumeratePhysicalDevices() first call succedded
GetPhysicalDevice(): vkEnumeratePhysicalDevices() second call succedded
GetPhysicalDevice(): succedded to free isQuequeSurfaceSupported_array
GetPhysicalDevice(): succedded to free vkQueueFamilyProperties_array
GetPhysicalDevice(): GetPhysicalDevice() suceeded to select required physical device with graphics enabled
GetPhysicalDevice(): succedded to free vkPhysicalDevice_array
GetPhysicalDevice(): Supported physical device supports tessellation shader
GetPhysicalDevice(): Supported physical device supports geometry shader

=== SELECTED DEVICE DETAILS (NO NEW BLOCK) ===
Device Name         : Intel(R) UHD Graphics 630
API Version         : 1.3.215
Driver Version      : 1656895
Vendor ID           : 0x8086
Device ID           : 0x3E98
Device Type         : 1
PipelineCacheUUID   : 0F3A0C3C073F3932063F053102350001

>> Device Limits <<
maxImageDimension2D : 16384
maxUniformBufferRange: 134217724
maxStorageBufferRange: 1073741820
maxPushConstantsSize : 256

>> Memory Properties <<
Memory Heap Count  : 1
Heap[0] Size=8504987648 bytes, Flags=0x1
Memory Type Count  : 3
Type[0] HeapIndex=0, PropertyFlags=0x1
Type[1] HeapIndex=0, PropertyFlags=0x7
Type[2] HeapIndex=0, PropertyFlags=0xF

>> More Device Features <<
SamplerAnisotropy   : YES
multiDrawIndirect   : YES
fillModeNonSolid    : YES
wideLines           : YES
largePoints         : YES
shaderFloat64       : YES
=== END SELECTED DEVICE DETAILS (NO NEW BLOCK) ===

initialize(): GetPhysicalDevice() succedded
WinMain(): initialize() succedded
uninitialize(): vkDestroySurfaceKHR() sucedded
uninitialize(): vkDestroyInstance() sucedded
uninitialize()-> Program ended successfully.
